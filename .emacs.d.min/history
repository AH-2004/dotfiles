;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(keymap-name-history dired-shell-command-history org-tags-history read-char-history sql-user-history bookmark-history search-ring dictionary-word-history shell-command-history regexp-history ido-file-history ido-buffer-history input-method-history face-name-history grep-files-history grep-regexp-history grep-history eglot-command-history goto-line-history tmm--history org-link--history compile-history query-replace-history read-number-history read-expression-history minibuffer-history yes-or-no-p-history file-name-history extended-command-history buffer-name-history))
(setq keymap-name-history '("org-mode-map"))
(setq read-char-history '("yes" "quit"))
(setq bookmark-history '("University" "University" "University" "University" "Dotfiles" "Dotfiles" "C++ Test"))
(setq search-ring '(#("unset" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("bind-key" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("package" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("dupl" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("dup" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("org" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("duplicate" 0 9 (isearch-case-fold-search t isearch-regexp-function nil)) #("indent" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("pythoni" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #(".emacs.d" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("#8a8585" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("ce" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("span" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("center" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("side" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #(".button" 0 7 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq dictionary-word-history '("Entrant"))
(setq shell-command-history '("/bin/sh" "pcmanfm"))
(setq regexp-history '("^$" ";;" ";;;" ";;;;" ";;;" "-->" "change"))
(setq face-name-history '("diff-indicator-added" "diff-file-header" "diff-index" "diff-header" "region" "diff-hunk-header" "diff-header" "diff-changed" "diff-refine-added" "diff-added" "diff-changed" "diff-indicator-changed" "org-hide"))
(setq grep-files-history '("*" "*.el" "*.[ch]" "c" "*.[ch]" "c"))
(setq grep-regexp-history '("fprintd" "neotree" "ewmh_sourceindication_client_type" "main (int argc, char **argv)" "main" "gtk_main" "main" "int main" "WnckClientType" "#include \"util.h\"" "wnck_set_client_type"))
(setq grep-history '("grep --color=auto -nH --null -e "))
(setq eglot-command-history '("vhdl_ls" "vhdl_lang" "vhdl_ls" "/usr/bin/vala-language-server" "vala-langauge-server"))
(setq goto-line-history '("79" "130" "48" "34" "13" "12" "0" "11"))
(setq tmm--history '("h==>Help" "c==>C++" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq compile-history '("xelatex -interaction=nonstopmode main.tex" "xelatex main.tex" "xelatex"))
(setq query-replace-history '(")" "))" "" "(kbd " "unbind-key" "global-unset-key" " " ") " "" "(kbd " "bind-key*" "global-set-key" " " ") " "" ") " "" ") " "" "(kbd " "bind-key*" "global-set-key" "span" "div" "vw" "dvw" "vh" "dvh" "" " class=\"center\"" "std::string" "string" "c1" "c2" "double" "int" "double" "int" "double" "int" "double" "int" "takeOrder" "order" "order" "stringinput" "bankId" "name" "Description" "shippingweight" "taxStatus" "address" "name" "address" "name" "" "std::" "semicircle" "circle" "
" ". " "int" "float" "double" "float" "int" "float" "int" "float" "float" "double" "std::cout" "cout" "std::string" "string" "std::string" "string" "std::string" "string" "" ")" "" "(" "wallpaper" "background" "" "`" "double" "float" "\"" "'" "\"\"" "'" "++i" "i++" "resultDigits" "result" "- *" "- " ""))
(setq read-expression-history '("wq"))
(setq minibuffer-history '("org-disputed-keys" "/bin/bash" "Hello" "<html xmlns=\"...\">...</html>" "<html>...</html>" "Tacchi" "yes" "network" "yes" "eglot-server-programs" "University" "bookmark-set" "bookmark-map" "list-bookmarks" "Dotfiles" "c-default-style" "clang-format" "C++ Test" "vterm-20230417.424" "multi-vterm-20221031.610" "multi-vterm" "vterm" "/bin/bash" "frame-parameter" "text-scale-increase" "yes" " " "sqlind-basic-offset" "wdired-mode" "wdired-finish-edit" "To Make" "file:code/org/To Make.org" "yes" "org-list-indent-offset" "adaptive-wrap-extra-indent" "adaptive-fill-first-line-regexp" "adaptive-fill-mode" "Time Table" "file:code/org/Time Table.org" "yes" "clang-format" "sqlind-basic-offset" "yes" "sql-use-indent-support" "yes" "sql-indent" "sql-use-indent-support" "yes" "mouse-wheel--get-scroll-window" "current-prefix-arg" "mwheel-scroll" "event-basic-type" "dired-touch-program" "x-select-enable-clipboard" "select-enable-primary" "x-select-enable-primary" "yes" "ediff-ignore-similar-regions" "ediff-highlight-all-diffs" "ediff-highlighting-style" "use-dialog-box" "user-dialog-box" "corfu-terminal-0.7" "sql-indent-1.7" "yes" "completion-at-point-functions" "js-mode" "helm-core-20231108.1729" "helm-20231114.1504" "helm-rg-20200721.725" "helm-20231114.1504" "vhdl-tools-20200330.1819" "helm-rg-20200721.725" "helm-20231114.1504" "vhdl-tools-20200330.1819" "default-directory" "read-only-mode" "vhdl-electric-mode" "vhdl-offsets-alist" "yes" "defadvice" "let*" "backward-word" "save-excursion" "org-at-radio-list-p" "interactive" "org-toggle-checkbox" "text-scale-mode-step" "redisplay-dont-pause" "scroll-preserve-screen-position" "display-buffer-alist" "window-tree" "display-buffer-alist" "yes" "sqlind-indentation-offsets-alist" "sqlind-basic-offset" "sql-use-indent-support" "tab-width" "electric-indent-just-newline" "electric-indent-local-mode"))
(setq yes-or-no-p-history '("yes" "no" "yes" "ye" "yes" "no" "Monoply" "yes" "yea" "yes" "yea" "yes"))
(setq file-name-history '("~/.emacs.d.old/keybindings.el" "~/.emacs.d/init.el" "~/code/c/os-shell/README.org" "~/.emacs.d/packages/" "~/.emacs.d/init.el" "~/code/c/os-shell/README.org" "~/.emacs.d/init.el" "~/code/c/os-shell/" "~/.emacs.d.old/init.el" "~/.emacs.d/init.el" "~/code/c/os-shell/README.org" "~/code/c/os-shell/main.cpp" "~/code/c/os-shell" "~/code/c/" "~/.emacs.d/init.el" "~/.emacs.d.old" "~/.emacs.d/" "~/.emacs.d/init.el" "~/.emacs.d/themes/base16-atelier-plateau-light-theme.el" "~/.emacs.d/init.el" "~/.emacs.d/themes/" "~/.emacs.d/init.el" "~/.xinitrc" "~/code/git/dotfiles/suckless/dwm/config.def.h" "~/code/git/tinywm/" "~/code/javascript/Tacchi/src/web/index.html" "~/code/javascript/Tacchi/src/web/index.css" "~/code/javascript/Tacchi/src/web/index.html" "~/code/javascript/Tacchi/src/web/index.css" "/run/media/AH/Windows/Users/ahmed/Documents/Ahmed/Code/Javascript/Password Manager/render/js/index.js" "~/code/javascript/Tacchi/src/web/assets/side.svg" "~/code/javascript/Tacchi/src/web/assets/icon.svg" "~/code/javascript/Hanashi/src/index.html" "~/code/javascript/Tacchi/src/web/index.js" "~/code/javascript/Tacchi/src/web/index.css" "~/code/javascript/Tacchi/src/web/" "~/code/javascript/Tacchi/src/main.js" "~/.emacs.d/init.el" "~/code/javascript/Tacchi/src/" "~/code/javascript/Tacchi/src/main.js" "~/code/javascript/Tacchi/src/" "~/code/javascript/Tacchi/src/web/index.html" "~/code/javascript/Tacchi/src/web/index.css" "~/code/javascript/Tacchi/src/config.json" "~/code/javascript/Tacchi/README.org" "~/code/javascript/Tacchi/src/web/index.css" "~/code/javascript/Tacchi/" "~/.emacs.d/packages.el" "~/code/lisp/yas.lisp" "~/code/lisp/" "~/.emacs.d/keybindings.el" "~/code/javascript/Tacchi/src/web/index.css" "~/code/javascript/Tacchi/src/web/index.html" "~/code/javascript/Tacchi/src/web" "~/code/javascript/Tacchi/src/" "~/code/javascript/Tacchi/src/config.json" "~/code/javascript/Tacchi/src/package.json" "~/code/javascript/Tacchi/src/main.js" "~/code/javascript/Tacchi/" "~/code/javascript/Tacchi/src" "~/code/javascript/Tacchi/README.org" "~/code/javascript/Tacchi" "~/code/javascript/" "/ssh:AH-LAP:~/code/uni/year_2/dsa/practice/linkedList.cpp" "/ssh:AH-LAP:~/code/uni/year_2/dsa/practice/circularLinkedList.cpp" "/ssh:AH-LAP:code/uni/year_2/dsa/practice/" "~/.emacs.d/packages.el" "/home/AH/.emacs.d/init.el" "/ssh:AH-LAP:code/uni/year_2/dsa/practice/" "~/code/git/dwm/dwm.c" "~/code/git/dwm/patches/" "~/code/git/dwm/config.def.h" "~/code/git/dwm/dwm.c" "~/code/git/dwm/" "~/code/git/dwm/config.def.h" "~/code/git/dwm" "~/code/git/dwm/dwm.c" "~/code/git/dwm/config.def.h" "~/code/git/dwm/drw.h" "~/code/git/dwm/dwm.c" "~/code/git/dwm/config.def.h" "~/.emacs.d/init.el" "~/code/git/dwm/transient.c" "~/code/git/dwm/config.def.h" "~/code/git/dwm/dwm.c" "~/.emacs.d/init.el" "~/code/git/dwm/" "~/code/git/dwm" "~/code/git/dotfiles/suckless/dwm/" "~/code/git/dotfiles/suckless/dwm/config.def.h" "~/code/git/dotfiles/suckless/dwm/patches/dwm-alttab.diff" "/usr/share/applications/emacs.desktop" "/boot/loader/entries/arch.conf" "~/code/git/dotfiles/suckless/dwm/patches/dwm-alttab-custom.diff" "/run/media/AH/Windows/Users/ahmed/Documents/Ahmed/My school work/Computer science/codeing/A3_Ahmed.py" "/run/media/AH/Windows/Users/ahmed/Documents/Ahmed/My school work/Computer science/codeing/A2_Ahmed.py" "/run/media/AH/Windows/Users/ahmed/Documents/Ahmed/My school work/Computer science/codeing" "~/code/uni/oop/project/calendar/time.cpp" "~/code/uni/oop/project/main.cpp" "~/code/uni/oop/project/calendar/time.h"))
(setq extended-command-history '("kill-emacs" "eval-buffer" "eval-region" "describe-keymap" "describe-variable" "kill-emacs" "duplicate-line" "cua-mode" "eval-region" "describe-variable" "cua-mode" "describe-key" "kill-emacs" "corfu-mode" "ansi-term" "kill-emacs" "st" "kill-emacs" "eval-region" "kill-emacs" "irc" "eglot" "st" "kill-emacs" "irc" "st" "kill-emacs" "describe-key" "describe-mode" "html-html5-template" "emmet-mode" "describe-mode" "st" "html-html5-template" "eglot" "corfu-mode" "eglot" "st" "tree-sitter-hl-mode" "corfu-mode" "eglot-rename" "tree-sitter-hl-mode" "st" "emacs-version" "kill-emacs" "st" "kill-emacs" "tree-sitter-mode" "tree-sitter-hl-mode" "st" "kill-emacs" "st" "kill-emacs" "st" "read-only-mode" "sudo-edit" "kill-emacs" "package-refresh-contents" "kill-emacs" "sudo-edit" "st" "c++-mode" "st" "kill-emacs" "package-list-packages" "st" "c-toggle-comment-style" "eglot" "corfu-mode" "delete-selection-mode" "st" "corfu-mode" "st" "kill-emacs" "describe-variable" "st" "tetris" "bookmark-set" "calendar" "bookmark-insert" "bookmark-set" "kill-emacs" "describe-function" "describe-mode" "kill-emacs" "describe-function" "list-packages" "bookmark-delete" "kill-emacs" "eval-region" "describe-function" "bookmark-delete" "eval-region" "describe-key" "list-bookmarks" "bookmark-set" "st" "delete-selection-mode" "st" "describe-variable"))
(setq buffer-name-history '("*scratch*" "*Messages*" "*Help*" "init.el" "*Messages*" "README.org" "*Help*" "README.org" "*scratch*" "makefile" "main.c" "makefile" "*ansi-term*" "init.el" "base16-atelier-plateau-light-theme.el" "init.el" "*Directory*" "*irc.libera.chat*" "index.js" "index.js<js>" "index.js" "index.css" "side.svg" "index.html" "icon.svg" "index.html" "index.css" "index.html<src>" "main.js" "*irc.libera.chat*" "config.json" "web" "config.json" "index.css" "index.html" "README.org" "*Bookmark List*" "keybindings.el" "*Help*" "web" "index.html" "config.json" "package.json" "README.org" "*Ibuffer*" "main.js" "*Ibuffer*" "package.json" "README.org" "Tacchi" "README.org" "makefile" "*Messages*" "linkedList.cpp" "patches" "config.def.h" "dwm" "config.def.h" "dwm.c" "X.h" "init.el" "dwm.c" "transient.c" "X.h" "Xlib.h" "dwm.c" "emacs.desktop" "*Compile-Log*" "*Async-native-compile-log*" "*Native-compile-Log*" "*Compile-Log*" "*scratch*" "A4_Ahmed.py" "test.py" "time.h" "time.cpp" "main.cpp" "calendar.cpp" "*tramp/ssh AH-LAP*" "project" "calendar.cpp" "main.cpp" "makefile" "main.cpp" "*Warnings*" "*Compile-Log*" "*Warnings*" "1-3.cpp" "1-4.cpp" "1-3.cpp" "1-1.cpp" "3.txt" "1-5.cpp" "main.cpp<lab_19>" "lab_19" "1-5.cpp" "1-2.cpp" "1-1.cpp" "main.cpp<_tests>" "*notes*"))
